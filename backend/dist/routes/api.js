"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const dropoff_1 = require("../models/dropoff");
const order_1 = require("../models/order");
const wolt_1 = require("../lib/wolt");
const router = (0, express_1.Router)();
router.get("/api/dropoffs", async (req, res) => {
    // get all dropoffs
    const dropoffs = await dropoff_1.default.find({});
    return res.json(dropoffs);
});
router.post("/api/order", async (req, res) => {
    if (!req.user) {
        return res.status(401).json({
            message: "You must be logged in",
        });
    }
    const { dropoffId, title, category } = req.body;
    const dropoff = await dropoff_1.default.findById(dropoffId);
    if (!dropoff) {
        return res.status(400).json({
            message: "Dropoff not found",
        });
    }
    const order = new order_1.default({
        dropoff,
        user: req.user,
        title: req.body.title,
        category: req.body.category,
    });
    await order.save();
    let delivery;
    try {
        delivery = await (0, wolt_1.createDelivery)(dropoff.address, "Korkeavuorenkatu 5, 00100 Helsinki", "come fast", {
            name: req.user.email,
            phone: req.user.phone,
        }, {
            name: dropoff.friendlyName,
            phone: "+358404938574",
        }, title, category, order._id.toString());
    }
    catch (err) {
        return res.status(400).json({
            message: "Error creating delivery",
        });
    }
    return res.json({
        order,
        delivery
    });
});
exports.default = router;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBpLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsicm91dGVzL2FwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHFDQUFpQztBQUNqQywrQ0FBd0M7QUFDeEMsMkNBQW9DO0FBQ3BDLHNDQUE2QztBQUM3QyxNQUFNLE1BQU0sR0FBRyxJQUFBLGdCQUFNLEdBQUUsQ0FBQztBQUV4QixNQUFNLENBQUMsR0FBRyxDQUFDLGVBQWUsRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxFQUFFO0lBQzdDLG1CQUFtQjtJQUNuQixNQUFNLFFBQVEsR0FBRyxNQUFNLGlCQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ3hDLE9BQU8sR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUM1QixDQUFDLENBQUMsQ0FBQztBQUVILE1BQU0sQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLEtBQUssRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEVBQUU7SUFDM0MsSUFBRyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUU7UUFDWixPQUFPLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDO1lBQzFCLE9BQU8sRUFBRSx1QkFBdUI7U0FDakMsQ0FBQyxDQUFDO0tBQ0o7SUFDRCxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsR0FBRyxHQUFHLENBQUMsSUFJMUMsQ0FBQztJQUNGLE1BQU0sT0FBTyxHQUFHLE1BQU0saUJBQU8sQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDbEQsSUFBSSxDQUFDLE9BQU8sRUFBRTtRQUNaLE9BQU8sR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUM7WUFDMUIsT0FBTyxFQUFFLG1CQUFtQjtTQUM3QixDQUFDLENBQUM7S0FDSjtJQUNELE1BQU0sS0FBSyxHQUFHLElBQUksZUFBSyxDQUFDO1FBQ3RCLE9BQU87UUFDUCxJQUFJLEVBQUUsR0FBRyxDQUFDLElBQUk7UUFDZCxLQUFLLEVBQUUsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLO1FBQ3JCLFFBQVEsRUFBRSxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVE7S0FDNUIsQ0FBQyxDQUFDO0lBQ0gsTUFBTSxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDbkIsSUFBSSxRQUFRLENBQUM7SUFDYixJQUFJO1FBQ0YsUUFBUSxHQUFHLE1BQU0sSUFBQSxxQkFBYyxFQUM3QixPQUFPLENBQUMsT0FBTyxFQUNmLG9DQUFvQyxFQUNwQyxXQUFXLEVBQ1g7WUFDRSxJQUFJLEVBQUUsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLO1lBQ3BCLEtBQUssRUFBRSxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUs7U0FDdEIsRUFDRDtZQUNFLElBQUksRUFBRSxPQUFPLENBQUMsWUFBWTtZQUMxQixLQUFLLEVBQUUsZUFBZTtTQUN2QixFQUNELEtBQUssRUFDTCxRQUFRLEVBQ1IsS0FBSyxDQUFDLEdBQUcsQ0FBQyxRQUFRLEVBQUUsQ0FDckIsQ0FBQztLQUNIO0lBQUMsT0FBTSxHQUFHLEVBQUM7UUFDVixPQUFPLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDO1lBQzFCLE9BQU8sRUFBRSx5QkFBeUI7U0FDbkMsQ0FBQyxDQUFDO0tBQ0o7SUFFRCxPQUFPLEdBQUcsQ0FBQyxJQUFJLENBQUM7UUFDZCxLQUFLO1FBQ0wsUUFBUTtLQUNULENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQyxDQUFDO0FBRUgsa0JBQWUsTUFBTSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSBcImV4cHJlc3NcIjtcbmltcG9ydCBEcm9wb2ZmIGZyb20gXCIuLi9tb2RlbHMvZHJvcG9mZlwiO1xuaW1wb3J0IE9yZGVyIGZyb20gXCIuLi9tb2RlbHMvb3JkZXJcIjtcbmltcG9ydCB7IGNyZWF0ZURlbGl2ZXJ5IH0gZnJvbSBcIi4uL2xpYi93b2x0XCI7XG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcblxucm91dGVyLmdldChcIi9hcGkvZHJvcG9mZnNcIiwgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIC8vIGdldCBhbGwgZHJvcG9mZnNcbiAgY29uc3QgZHJvcG9mZnMgPSBhd2FpdCBEcm9wb2ZmLmZpbmQoe30pO1xuICByZXR1cm4gcmVzLmpzb24oZHJvcG9mZnMpO1xufSk7XG5cbnJvdXRlci5wb3N0KFwiL2FwaS9vcmRlclwiLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgaWYoIXJlcS51c2VyKSB7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHtcbiAgICAgIG1lc3NhZ2U6IFwiWW91IG11c3QgYmUgbG9nZ2VkIGluXCIsXG4gICAgfSk7XG4gIH1cbiAgY29uc3QgeyBkcm9wb2ZmSWQsIHRpdGxlLCBjYXRlZ29yeSB9ID0gcmVxLmJvZHkgYXMge1xuICAgIGRyb3BvZmZJZDogc3RyaW5nO1xuICAgIHRpdGxlOiBzdHJpbmc7XG4gICAgY2F0ZWdvcnk6IHN0cmluZztcbiAgfTtcbiAgY29uc3QgZHJvcG9mZiA9IGF3YWl0IERyb3BvZmYuZmluZEJ5SWQoZHJvcG9mZklkKTtcbiAgaWYgKCFkcm9wb2ZmKSB7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgIG1lc3NhZ2U6IFwiRHJvcG9mZiBub3QgZm91bmRcIixcbiAgICB9KTtcbiAgfVxuICBjb25zdCBvcmRlciA9IG5ldyBPcmRlcih7XG4gICAgZHJvcG9mZixcbiAgICB1c2VyOiByZXEudXNlcixcbiAgICB0aXRsZTogcmVxLmJvZHkudGl0bGUsXG4gICAgY2F0ZWdvcnk6IHJlcS5ib2R5LmNhdGVnb3J5LFxuICB9KTtcbiAgYXdhaXQgb3JkZXIuc2F2ZSgpO1xuICBsZXQgZGVsaXZlcnk7XG4gIHRyeSB7XG4gICAgZGVsaXZlcnkgPSBhd2FpdCBjcmVhdGVEZWxpdmVyeShcbiAgICAgIGRyb3BvZmYuYWRkcmVzcyxcbiAgICAgIFwiS29ya2VhdnVvcmVua2F0dSA1LCAwMDEwMCBIZWxzaW5raVwiLFxuICAgICAgXCJjb21lIGZhc3RcIixcbiAgICAgIHtcbiAgICAgICAgbmFtZTogcmVxLnVzZXIuZW1haWwsXG4gICAgICAgIHBob25lOiByZXEudXNlci5waG9uZSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIG5hbWU6IGRyb3BvZmYuZnJpZW5kbHlOYW1lLFxuICAgICAgICBwaG9uZTogXCIrMzU4NDA0OTM4NTc0XCIsXG4gICAgICB9LFxuICAgICAgdGl0bGUsXG4gICAgICBjYXRlZ29yeSxcbiAgICAgIG9yZGVyLl9pZC50b1N0cmluZygpXG4gICAgKTtcbiAgfSBjYXRjaChlcnIpe1xuICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7XG4gICAgICBtZXNzYWdlOiBcIkVycm9yIGNyZWF0aW5nIGRlbGl2ZXJ5XCIsXG4gICAgfSk7XG4gIH1cbiAgXG4gIHJldHVybiByZXMuanNvbih7XG4gICAgb3JkZXIsXG4gICAgZGVsaXZlcnlcbiAgfSk7XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyOyJdfQ==