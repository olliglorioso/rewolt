"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express = require("express");
const mongoose_1 = require("mongoose");
const dotenv = require("dotenv");
const cors = require("cors");
dotenv.config();
const app = express();
const PORT = process.env.PORT || 4000;
app.use(express.static("./build"));
const DB_URL = process.env.DB_URL;
mongoose_1.default.connect(DB_URL || "");
app.use((err, req, res, next) => {
    res.status(500).json({ "msg": "Something broke!" });
});
app.use((req, res, next) => {
    if (req.url.startsWith("/api")) {
        next();
    }
    else {
        res.sendFile("index.html", { root: "./build" });
    }
});
app.use(express.json());
app.use(cors());
require("./models/user");
require("./models/order");
require("./models/dropoff");
const routers = [
    // import routers here
    require("./routes/public").default,
];
routers.forEach(router => {
    app.use(router);
});
// require token
app.use(require("./middlewares/auth").requireLogin);
app.use(require("./routes/api").default);
// run the server
app.listen(PORT, () => {
    console.log(`Server is listening on port ${PORT}`);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1DQUFtQztBQUNuQyx1Q0FBZ0M7QUFDaEMsaUNBQWlDO0FBQ2pDLDZCQUE2QjtBQWE3QixNQUFNLENBQUMsTUFBTSxFQUFFLENBQUM7QUFFaEIsTUFBTSxHQUFHLEdBQUcsT0FBTyxFQUFFLENBQUM7QUFDdEIsTUFBTSxJQUFJLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDO0FBQ3RDLEdBQUcsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFBO0FBQ2xDLE1BQU0sTUFBTSxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDO0FBQ2xDLGtCQUFRLENBQUMsT0FBTyxDQUFDLE1BQU0sSUFBSSxFQUFFLENBQUMsQ0FBQztBQUUvQixHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBUSxFQUFFLEdBQVEsRUFBRSxHQUFRLEVBQUUsSUFBUyxFQUFFLEVBQUU7SUFDbEQsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBQyxLQUFLLEVBQUUsa0JBQWtCLEVBQUMsQ0FBQyxDQUFBO0FBQ25ELENBQUMsQ0FBQyxDQUFBO0FBRUYsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLEVBQUU7SUFDekIsSUFBRyxHQUFHLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsRUFBRTtRQUM3QixJQUFJLEVBQUUsQ0FBQztLQUNSO1NBQU07UUFDTCxHQUFHLENBQUMsUUFBUSxDQUFDLFlBQVksRUFBRSxFQUFDLElBQUksRUFBRSxTQUFTLEVBQUMsQ0FBQyxDQUFDO0tBQy9DO0FBQ0gsQ0FBQyxDQUFDLENBQUM7QUFFSCxHQUFHLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFBO0FBQ3ZCLEdBQUcsQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQTtBQUNmLE9BQU8sQ0FBQyxlQUFlLENBQUMsQ0FBQztBQUN6QixPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztBQUMxQixPQUFPLENBQUMsa0JBQWtCLENBQUMsQ0FBQztBQUU1QixNQUFNLE9BQU8sR0FBRztJQUNkLHNCQUFzQjtJQUN0QixPQUFPLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxPQUFPO0NBQ25DLENBQUE7QUFFRCxPQUFPLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFO0lBQ3ZCLEdBQUcsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDbEIsQ0FBQyxDQUFDLENBQUM7QUFFSCxnQkFBZ0I7QUFDaEIsR0FBRyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsb0JBQW9CLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUVwRCxHQUFHLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUd6QyxpQkFBaUI7QUFDakIsR0FBRyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsR0FBRyxFQUFFO0lBQ3BCLE9BQU8sQ0FBQyxHQUFHLENBQUMsK0JBQStCLElBQUksRUFBRSxDQUFDLENBQUM7QUFDckQsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBleHByZXNzIGZyb20gXCJleHByZXNzXCI7XG5pbXBvcnQgbW9uZ29vc2UgZnJvbSBcIm1vbmdvb3NlXCI7XG5pbXBvcnQgKiBhcyBkb3RlbnYgZnJvbSBcImRvdGVudlwiO1xuaW1wb3J0ICogYXMgY29ycyBmcm9tIFwiY29yc1wiO1xuaW1wb3J0IHsgSVVzZXIgfSBmcm9tIFwiLi9tb2RlbHMvdXNlclwiO1xuXG5leHBvcnQge31cblxuZGVjbGFyZSBnbG9iYWwge1xuICBuYW1lc3BhY2UgRXhwcmVzcyB7XG4gICAgZXhwb3J0IGludGVyZmFjZSBSZXF1ZXN0IHtcbiAgICAgIHVzZXI/OiBJVXNlcjtcbiAgICB9XG4gIH1cbn1cblxuZG90ZW52LmNvbmZpZygpO1xuXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5jb25zdCBQT1JUID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCA0MDAwO1xuYXBwLnVzZShleHByZXNzLnN0YXRpYyhcIi4vYnVpbGRcIikpXG5jb25zdCBEQl9VUkwgPSBwcm9jZXNzLmVudi5EQl9VUkw7XG5tb25nb29zZS5jb25uZWN0KERCX1VSTCB8fCBcIlwiKTtcblxuYXBwLnVzZSgoZXJyOiBhbnksIHJlcTogYW55LCByZXM6IGFueSwgbmV4dDogYW55KSA9PiB7XG4gIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcIm1zZ1wiOiBcIlNvbWV0aGluZyBicm9rZSFcIn0pXG59KVxuXG5hcHAudXNlKChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICBpZihyZXEudXJsLnN0YXJ0c1dpdGgoXCIvYXBpXCIpKSB7XG4gICAgbmV4dCgpO1xuICB9IGVsc2Uge1xuICAgIHJlcy5zZW5kRmlsZShcImluZGV4Lmh0bWxcIiwge3Jvb3Q6IFwiLi9idWlsZFwifSk7XG4gIH1cbn0pO1xuXG5hcHAudXNlKGV4cHJlc3MuanNvbigpKVxuYXBwLnVzZShjb3JzKCkpXG5yZXF1aXJlKFwiLi9tb2RlbHMvdXNlclwiKTtcbnJlcXVpcmUoXCIuL21vZGVscy9vcmRlclwiKTtcbnJlcXVpcmUoXCIuL21vZGVscy9kcm9wb2ZmXCIpO1xuXG5jb25zdCByb3V0ZXJzID0gW1xuICAvLyBpbXBvcnQgcm91dGVycyBoZXJlXG4gIHJlcXVpcmUoXCIuL3JvdXRlcy9wdWJsaWNcIikuZGVmYXVsdCxcbl1cblxucm91dGVycy5mb3JFYWNoKHJvdXRlciA9PiB7XG4gIGFwcC51c2Uocm91dGVyKTtcbn0pO1xuXG4vLyByZXF1aXJlIHRva2VuXG5hcHAudXNlKHJlcXVpcmUoXCIuL21pZGRsZXdhcmVzL2F1dGhcIikucmVxdWlyZUxvZ2luKTtcblxuYXBwLnVzZShyZXF1aXJlKFwiLi9yb3V0ZXMvYXBpXCIpLmRlZmF1bHQpO1xuXG5cbi8vIHJ1biB0aGUgc2VydmVyXG5hcHAubGlzdGVuKFBPUlQsICgpID0+IHtcbiAgY29uc29sZS5sb2coYFNlcnZlciBpcyBsaXN0ZW5pbmcgb24gcG9ydCAke1BPUlR9YCk7XG59KTtcblxuXG5cbiJdfQ==